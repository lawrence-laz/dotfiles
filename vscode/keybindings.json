// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+shift+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+a",
        "command": "explorer.newFile"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+k",
        "command": "-bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+p",
        "command": "bookmarks.jumpToNext",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+l",
        "command": "-bookmarks.jumpToNext",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+n",
        "command": "bookmarks.jumpToPrevious",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-bookmarks.jumpToPrevious",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+f8",
        "command": "-editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "bookmarks.clearFromAllFiles"
    },
    {
        "key": "ctrl+k ctrl+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+m ctrl+p",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+m ctrl+o",
        "command": "editor.foldLevel1",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+1",
        "command": "-editor.foldLevel1",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "shift+delete",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+enter",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+enter",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.debug.viewlet.action.addFunctionBreakpointAction"
    },
    {
        "key": "alt+j",
        "when": "vim.mode == 'Normal' || vim.mode == 'Visual'|| vim.mode == 'VisualBlock'|| vim.mode == 'VisualLine'",
        "command": "editor.action.moveLinesDownAction"
    },
    {
        "when": "vim.mode == 'Normal' || vim.mode == 'Visual'|| vim.mode == 'VisualBlock'|| vim.mode == 'VisualLine'",
        "key": "alt+k",
        "command": "editor.action.moveLinesUpAction"
    },
    {
        // Move character under cursor to left
        "key": "alt+h",
        "command": "vim.remap",
        "when": "inputFocus && vim.mode == 'Normal'",
        "args": { "after": [ "\"", "h", "x", "2", "h", "\"", "h", "p" ] }
        // "args": { "after": [ "\"", "h", "x", "2", "h", "\"", "h", "p" ] }
    },
    {
        // Move character under cursor to right
        "key": "alt+l",
        "command": "vim.remap",
        "when": "inputFocus && vim.mode == 'Normal'",
        "args": { "after": [ "\"", "h", "x", "\"", "h", "p" ] }
    },
    {
        // Move selected characters to left
        // "key": "alt+h",
        // "command": "vim.remap",
        // "when": "vim.mode == 'Visual' || vim.mode == 'VisualBlock'",
        // "args": { "after": [ "\"", "h", "d", "2", "h", "\"", "h", "p", "`", "[", "v", "`", "]", "h" ] }
        // "args": { "after": [ "\"hd2h\"hp`[v`]h" ] }
    },
    {
        // Move selected characters to right
        // "key": "alt+l",
        // "command": "vim.remap",
        // "when": "inputFocus && vim.mode == 'Normal'",
        // "args": { "after": [ "\"", "h", "d", "\"", "h", "p", "`", "[", "v", "`", "]", "h" ] }
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+shift+w",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+left",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+j",
        "command": "-bookmarks.expandSelectionToPrevious",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+k",
        "command": "-bookmarks.shrinkSelection",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.copyLinesDownAction"
    },
    {
        "key": "shift+alt+j",
        "command": "cursorColumnSelectDown",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+k",
        "command": "cursorColumnSelectUp",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+j ctrl+i",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
        // "when": "!editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "when": "vim.mode == 'Normal' || vim.mode == 'Visual'|| vim.mode == 'VisualBlock'|| vim.mode == 'VisualLine'",
        "key": "alt+k",
        "command": "editor.action.moveLinesUpAction"
    },
    { "key": "ctrl+tab", "command": "workbench.action.nextEditor" },
    { "key": "ctrl+pagedown", "command": "-workbench.action.nextEditor" },
    { "key": "ctrl+shift+tab", "command": "workbench.action.previousEditor" },
    { "key": "ctrl+pageup", "command": "-workbench.action.previousEditor" },


    // Show hover information
    {
        "key": "alt+h",
        "command": "vim.remap",
        "when": "vim.mode == 'Visual' || vim.mode == 'VisualBlock'",
        "args": { "commands": [ "editor.debug.action.showDebugHover" ] }
        // "args": { "after": [ "\"hd2h\"hp`[v`]h" ] }
    },

/*     {
        "key": "ctrl+j ctrl+i",
        "command": "editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "ctrl+j shift+enter",
        "command": "workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    },
    {
        "key": "ctrl+k shift+enter",
        "command": "-workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    }, */

    // Navigate editor splits with ctrl+hjkl
    { "key": "ctrl+k", "command": "workbench.action.focusAboveGroup" },
    { "key": "ctrl+k ctrl+up", "command": "-workbench.action.focusAboveGroup" },
    { "key": "ctrl+j", "command": "workbench.action.focusBelowGroup" },
    { "key": "ctrl+k ctrl+down", "command": "-workbench.action.focusBelowGroup" },
    { "key": "ctrl+h", "command": "workbench.action.focusLeftGroup" },
    { "key": "ctrl+k ctrl+left", "command": "-workbench.action.focusLeftGroup" },
    { "key": "ctrl+l", "command": "workbench.action.focusRightGroup" },
    {
        "key": "ctrl+k ctrl+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+shift+f12",
        "command": "go-to-next-error.nextInFiles.error",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+k",
        "command": "editor.action.wordHighlight.prev",
        "when": "editorTextFocus && hasWordHighlights"
    },
    {
        "key": "ctrl+shift+j",
        "command": "editor.action.wordHighlight.next",
        "when": "editorTextFocus && hasWordHighlights"
    },
]
