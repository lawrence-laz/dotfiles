/************************************************************************************

When clauses: https://code.visualstudio.com/api/references/when-clause-contexts

TODO:

- Paste overwrites clipboard on visual
- <S-A-j/k> multi-cursor does not work
- <S-CR> and <C-CR> do not work to insert line above/below
- <A-Up> .inputrc equivalent to do `cd ..`
- F5 debug continue does not work

*************************************************************************************/
[
  {
    "key": "ctrl+shift+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+a",
    "command": "explorer.newFile"
  },
  {
    "key": "ctrl+k ctrl+k",
    "command": "bookmarks.toggle",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+k",
    "command": "-bookmarks.toggle",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+p",
    "command": "bookmarks.jumpToNext",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+l",
    "command": "-bookmarks.jumpToNext",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+n",
    "command": "bookmarks.jumpToPrevious",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+j",
    "command": "-bookmarks.jumpToPrevious",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+f8",
    "command": "-editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+k ctrl+l",
    "command": "bookmarks.clearFromAllFiles"
  },
  {
    "key": "ctrl+k ctrl+0",
    "command": "-editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+m ctrl+p",
    "command": "editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+j",
    "command": "-editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+m ctrl+o",
    "command": "editor.foldLevel1",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+1",
    "command": "-editor.foldLevel1",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "shift+delete",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+enter",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+enter",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.debug.viewlet.action.addFunctionBreakpointAction"
  },
  {
    "key": "alt+j",
    "when": "neovim.mode == 'normal' || vim.mode == 'visual'|| vim.mode == 'VisualBlock'|| vim.mode == 'VisualLine'",
    "command": "editor.action.moveLinesDownAction"
  },
  {
    "key": "alt+k",
    "when": "neovim.mode == 'normal' || vim.mode == 'visual'|| vim.mode == 'VisualBlock'|| vim.mode == 'VisualLine'",
    "command": "editor.action.moveLinesUpAction"
  },
  {
    "key": "cmd+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "neovim.mode == 'normal' || vim.mode == 'visual'|| vim.mode == 'VisualBlock'|| vim.mode == 'VisualLine'",
  },
  {
    "key": "cmd+k",
    "when": "neovim.mode == 'normal' || vim.mode == 'visual'|| vim.mode == 'VisualBlock'|| vim.mode == 'VisualLine'",
    "command": "editor.action.moveLinesUpAction"
  },
  {
    "when": "neovim.mode == 'normal' || vim.mode == 'visual'|| vim.mode == 'VisualBlock'|| vim.mode == 'VisualLine'",
    "key": "alt+k",
    "command": "editor.action.moveLinesUpAction"
  },
  {
    // Move character under cursor to left
    "key": "alt+h",
    "command": "vim.remap",
    "when": "inputFocus && vim.mode == 'normal'",
    "args": { "after": [ "\"", "h", "x", "2", "h", "\"", "h", "p" ] }
    // "args": { "after": [ "\"", "h", "x", "2", "h", "\"", "h", "p" ] }
  },
  {
    // Move character under cursor to right
    "key": "alt+l",
    "command": "vim.remap",
    "when": "inputFocus && vim.mode == 'normal'",
    "args": { "after": [ "\"", "h", "x", "\"", "h", "p" ] }
  },
  // {
  //     // Move character under cursor to left
  //     // MacOS
  //     "key": "cmd+h",
  //     "command": "vim.remap",
  //     "when": "inputFocus && vim.mode == 'normal'",
  //     "args": { "after": [ "\"", "h", "x", "2", "h", "\"", "h", "p" ] }
  //     // "args": { "after": [ "\"", "h", "x", "2", "h", "\"", "h", "p" ] }
  // },
  // {
  //     // Move character under cursor to right
  //     // MacOS
  //     "key": "cmd+l",
  //     "command": "vim.remap",
  //     "when": "inputFocus && vim.mode == 'normal'",
  //     "args": { "after": [ "\"", "h", "x", "\"", "h", "p" ] }
  // },
  // {
  // Move selected characters to left
  // "key": "alt+h",
  // "command": "vim.remap",
  // "when": "neovim.mode == 'visual' || vim.mode == 'VisualBlock'",
  // "args": { "after": [ "\"", "h", "d", "2", "h", "\"", "h", "p", "`", "[", "v", "`", "]", "h" ] }
  // "args": { "after": [ "\"hd2h\"hp`[v`]h" ] }
  // },
  // {
  // Move selected characters to right
  // "key": "alt+l",
  // "command": "vim.remap",
  // "when": "inputFocus && vim.mode == 'normal'",
  // "args": { "after": [ "\"", "h", "d", "\"", "h", "p", "`", "[", "v", "`", "]", "h" ] }
  // },
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "ctrl+shift+w",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+left",
    "command": "-editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+j",
    "command": "-bookmarks.expandSelectionToPrevious",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+k",
    "command": "-bookmarks.shrinkSelection",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.copyLinesDownAction"
  },
  {
    "key": "shift+alt+j",
    "command": "cursorColumnSelectDown",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+k",
    "command": "cursorColumnSelectUp",
    "when": "editorTextFocus"
  },
  // {
  //     "key": "shift+cmd+j", // MacOS
  //     "command": "cursorColumnSelectDown",
  //     "when": "editorTextFocus"
  // },
  // {
  //     "key": "shift+cmd+k", // MacOS
  //     "command": "cursorColumnSelectUp",
  //     "when": "editorTextFocus"
  // },
  {
    "key": "ctrl+j ctrl+i",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
    // "when": "!editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.nextEditor"
  },
  { "key": "ctrl+pageup", "command": "-workbench.action.previousEditor" },

  {
    // Show hover information
    "key": "alt+h",
    "command": "vim.remap",
    "when": "neovim.mode == 'visual' || vim.mode == 'VisualBlock'",
    "args": { "commands": [ "editor.debug.action.showDebugHover" ] }
    // "args": { "after": [ "\"hd2h\"hp`[v`]h" ] }
  },
  // {
  //     // Show hover information
  //     // MacOS
  //     "key": "cmd+h",
  //     "command": "vim.remap",
  //     "when": "neovim.mode == 'visual' || vim.mode == 'VisualBlock'",
  //     "args": { "commands": [ "editor.debug.action.showDebugHover" ] }
  //     // "args": { "after": [ "\"hd2h\"hp`[v`]h" ] }
  // },

  /*     {
        "key": "ctrl+j ctrl+i",
        "command": "editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "ctrl+j shift+enter",
        "command": "workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    },
    {
        "key": "ctrl+k shift+enter",
        "command": "-workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    }, */

  // Navigate editor splits with ctrl+hjkl
  // { "key": "ctrl+k", "command": "workbench.action.focusAboveGroup" },
  // { "key": "ctrl+k ctrl+up", "command": "-workbench.action.focusAboveGroup" },
  // { "key": "ctrl+j", "command": "workbench.action.focusBelowGroup" },
  // { "key": "ctrl+k ctrl+down", "command": "-workbench.action.focusBelowGroup" },
  // { "key": "ctrl+h", "command": "workbench.action.focusLeftGroup" },
  // { "key": "ctrl+k ctrl+left", "command": "-workbench.action.focusLeftGroup" },
  // { "key": "ctrl+l", "command": "workbench.action.focusRightGroup" },
  // This is event better and vim/tmux like
  { "key": "ctrl+k", "command": "workbench.action.navigateUp" },
  { "key": "ctrl+j", "command": "workbench.action.navigateDown" },
  { "key": "ctrl+h", "command": "workbench.action.navigateLeft" },
  { "key": "ctrl+l", "command": "workbench.action.navigateRight" },
  {
    "key": "ctrl+h",
    "command": "workbench.action.previousPanelView",
    "when": "panelFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.nextPanelView",
    "when": "panelFocus"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.files.action.focusOpenEditorsView",
    "when": "sideBarFocus && explorerViewletVisible"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.files.action.focusFilesExplorer",
    "when": "explorerViewletVisible && sideBarFocus && !filesExplorerFocus"
  },
  {
    "key": "ctrl+k ctrl+right",
    "command": "-workbench.action.focusRightGroup"
  },
  {
    "key": "ctrl+shift+f12",
    "command": "go-to-next-error.nextInFiles.error",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+k",
    "command": "editor.action.wordHighlight.prev",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "key": "ctrl+shift+j",
    "command": "editor.action.wordHighlight.next",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "key": "alt+shift+;",
    "command": "editor.action.selectHighlights",
    "when": "editorFocus"
  },
  // {
  //     // MacOS
  //     "key": "cmd+shift+;",
  //     "command": "editor.action.selectHighlights",
  //     "when": "editorFocus"
  // },
  {
    "key": "tab",
    "command": "selectNextQuickFix",
    "when": "editorFocus && quickFixWidgetVisible"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevQuickFix",
    "when": "editorFocus && quickFixWidgetVisible"
  },
  {
    "key": "tab",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    // Requires https://marketplace.visualstudio.com/items?itemName=ryuta46.multi-command
    "key": "j",
    "command": "multiCommand.navigateExplorerDownAndPreviewFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    // Required https://marketplace.visualstudio.com/items?itemName=ryuta46.multi-command
    "key": "k",
    "command": "multiCommand.navigateExplorerUpAndPreviewFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+m ctrl+m",
    "command": "editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+l",
    "command": "-editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+e t",
    "command": "workbench.view.testing.focus"
  },
  {
    "key": "ctrl+; c",
    "command": "-testing.runAtCursor",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+f12",
    "command": "-editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+,",
    "command": "workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+r ctrl+r",
    "command": "-editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.terminal.runRecentCommand",
    "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+r ctrl+w",
    "command": "-editor.action.toggleRenderWhitespace"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "key": "ctrl+cmd+l",
    "command": "workbench.explorer.fileView.focus"
  },
  {
    "key": "ctrl+shift+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "shift+cmd+p",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "shift+cmd+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "cmd+w",
    "command": "-workbench.action.closeWindow",
    "when": "!editorIsOpen && !multipleEditorGroups"
  },
  {
    "key": "shift+cmd+.",
    "command": "-breadcrumbs.focusAndSelect",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
  },
  {
    "key": "shift+cmd+.",
    "command": "-editor.action.inPlaceReplace.down",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+.",
    "command": "-breadcrumbs.toggleToOn",
    "when": "!config.breadcrumbs.enabled"
  },
  {
    "key": "shift+cmd+.",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "cmd+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "f2",
    "command": "renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+.",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+.",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+.",
    "command": "workbench.action.terminal.showQuickFixes",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+.",
    "command": "-workbench.action.terminal.showQuickFixes",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+.",
    "command": "problems.action.showQuickFixes",
    "when": "problemFocus"
  },
  {
    "key": "cmd+.",
    "command": "-problems.action.showQuickFixes",
    "when": "problemFocus"
  },
  {
    "key": "ctrl+cmd+l",
    "command": "workbench.action.closeSidebar",
    "when": "sideBarVisible && sideBarFocus"
  },
  {
    "key": "n",
    "command": "vscode-neovim.send",
    "when": "!searchViewletVisible && neovim.mode != 'insert' && editorTextFocus",
    "args": "n"
  },
  {
    "key": "shift+n",
    "command": "vscode-neovim.send",
    "when": "!searchViewletVisible && neovim.mode != 'insert' && editorTextFocus",
    "args": "N"
  },
  // {
  //   "key": "shift+n",
  //   "command": "search.action.focusPreviousSearchResult",
  //   "when": "searchViewletVisible && !searchInputBoxFocus && neovim.mode != 'insert' && editorTextFocus"
  // },
  {
    "key": "n",
    "command": "search.action.focusNextSearchResult",
    "when": "searchViewletVisible && !searchInputBoxFocus && neovim.mode != 'insert' && editorTextFocus"
  },
  {
    "key": "shift+n",
    "command": "search.action.focusPreviousSearchResult",
    "when": "searchViewletVisible && !searchInputBoxFocus && neovim.mode != 'insert' && editorTextFocus"
  },
  {
    "key": "enter",
    "command": "search.action.focusNextSearchResult",
    "when": "searchInputBoxFocus"
  },
  {
    "key": "n",
    "command": "references-view.next",
    "when": "view.references-view.tree.visible && !textInputFocus && sideBarFocus || view.references-view.tree.visible && editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "shift+n",
    "command": "references-view.prev",
    "when": "view.references-view.tree.visible && !textInputFocus && sideBarFocus || view.references-view.tree.visible && editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "f4",
    "command": "-search.action.focusNextSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "f4",
    "command": "-references-view.next",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "key": "g g",
    "command": "vscode-neovim.send",
    "when": "editorTextFocus && neovim.mode != 'insert'",
    "args": "gg"
  },
  {
    "key": "g x",
    "command": "vscode-neovim.send",
    "when": "editorTextFocus && neovim.mode != 'insert'",
    "args": "gx"
  },
  {
    "key": "f4",
    "command": "-goToNextReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "g u",
    "command": "references-view.findReferences",
    "when": "editorHasReferenceProvider && neovim.mode != 'insert' && editorTextFocus"
  },
  {
    "key": "shift+alt+f12",
    "command": "-references-view.findReferences",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "g i",
    "command": "references-view.findImplementations",
    "when": "neovim.mode != 'insert' && editorTextFocus",
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+d"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+u"
  },
  {
    "command": "vscode-neovim.send",
    "key": "ctrl+d",
    "args": "<C-d>jk",
  },
  {
    "command": "vscode-neovim.send",
    "key": "ctrl+u",
    "args": "<C-u>jk",
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "g d",
    "command": "editor.action.revealDefinition",
    "when": "neovim.mode != 'insert' && editorTextFocus && editorHasDefinitionProvider && !isInEmbeddedEditor"
  },
  // {
  //   // This is what I need but this extensions doesn't seem to work any longer.
  //   "key": "g e",
  //   "command": "go-to-next-error.nextInFiles.error",
  //   "when": "editorTextFocus && neovim.mode != 'insert'"
  // },
  {
    "key": "shift+esc",
    "command": "workbench.actions.view.problems",
    "when": ""
  },
  {
    "key": "shift+escape",
    "command": "workbench.actions.view.problems",
    "when": "focusedView == 'workbench.panel.markers.view'"
  },
  {
    "key": "g e",
    "command": "editor.action.marker.nextInFiles",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "cmd+j",
    "command": "-workbench.action.togglePanel"
  },
]
